# Generated by Django 4.2.5 on 2023-09-27 17:28

from django.db import migrations, models
import django.db.models.deletion


def create_employees(apps, scschema_editorhe):
    EmployeeModel = apps.get_model("app", "EmployeeModel")
    names = [
        "Иван",
    ]
    for name in names:
        EmployeeModel.objects.create(name=name)


def create_accounts(apps, schema_editor):
    WbBusinessAccountModel = apps.get_model("app", "WbBusinessAccountModel")
    WbWarehouseModel = apps.get_model("app", "WbWarehouseModel")
    WbAccountWarehouseModel = apps.get_model("app", "WbAccountWarehouseModel")
    accounts = [
        {
            "name": "БГД",
            "wb_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3NJRCI6ImQyZDVmMzY3LTcwN2YtNGMyZS05ZjUyLTNhMWI3NDExNWMzYSJ9.F4wEsf1DqNxxasDtDQp9ryYzw0Q2n6pGtE3jh7LpgHk",
            "warehouses": {
                "Рябиновая": 13203,
                "Внуково": 800842,
            },
        },
        {
            "name": "ИП Эмиль",
            "wb_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3NJRCI6IjM0MDA0OTBiLWE4N2ItNGQyZS05ZjY2LWJkNjc1MWJkNjg5YyJ9.jh8nLy-E6jq6cENDfYq6oeAetftKwkcLR3Xqv6FIAss",
            "warehouses": {
                "Рябиновая": 4731,
                "Внуково": 800837,
            },
        },
        {
            "name": "ИП Завалун",
            "wb_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3NJRCI6IjMwOGY0OTQzLWMwNTUtNDFlMC1hMjhmLTcxZGU1ZGIyNWI1YSJ9.bvZ5NBY0mbCoF-ch-4C4rctZQKYbKzktN-yF5FoXXxE",
            "warehouses": {
                "Рябиновая": 2395,
                "Внуково": 800840,
            },
        },
        {
            "name": "ИП Камил",
            "wb_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3NJRCI6ImZkMTQwNjBlLTJlMDYtNGQyNS05MTQyLTJmZDJjZDI1YzJlNyJ9.65mxof65h_RL72SBb0LL-Kgrza_YiMlEzdSV6y5hTBM",
            "warehouses": {
                "Рябиновая": 11787,
                "Внуково": 800844,
            },
        },
        {
            "name": "Парк Энд Гоу и К",
            "wb_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3NJRCI6IjE3NzZjNGJmLWViYzUtNDA5Ni05ZDkxLTU3NjBmMTZiMTJjZiJ9.cK70QkVANrwbtzQePKNNBnzcShlbh_afjdeEMLs2OYE",
            "warehouses": {
                "Рябиновая": 2469,
                "Внуково": 800843,
            },
        },
        {
            "name": "МПСТОР",
            "wb_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3NJRCI6ImZhYTcyYTJjLTE2M2ItNDNhMy1hZTZmLWU4ZTk3N2NlZGEyYyJ9.HUccCStC4Q6uySFa2QnXDB68gwDVlnFBjSjiMCjTEp4",
            "warehouses": {
                "Рябиновая": 800845,
                "Внуково": 800846,
            },
        },
    ]
    for account in accounts:
        business_account, created = WbBusinessAccountModel.objects.get_or_create(
            name=account.get("name"), wb_token=account.get("wb_token")
        )
        for warehouse_name in account.get("warehouses"):
            wb_id = account.get("warehouses").get(warehouse_name)
            warehouse, created = WbWarehouseModel.objects.get_or_create(
                name=warehouse_name
            )
            WbAccountWarehouseModel.objects.create(
                wb_id=wb_id, warehouse=warehouse, business_account=business_account
            )


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="EmployeeModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
            ],
            options={
                "db_table": "employees",
            },
        ),
        migrations.CreateModel(
            name="WbBusinessAccountModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("wb_token", models.TextField()),
            ],
            options={
                "db_table": "wb_business_accounts",
            },
        ),
        migrations.CreateModel(
            name="WbOrderModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("wb_id", models.IntegerField(unique=True)),
                ("wb_rid", models.CharField(max_length=128)),
                ("wb_created_at", models.CharField(max_length=128)),
                ("wb_warehouse_id", models.IntegerField()),
                ("wb_supply_id", models.CharField(max_length=128)),
                ("wb_offices", models.CharField(max_length=128)),
                ("wb_address", models.CharField(max_length=128)),
                ("wb_user", models.CharField(max_length=128)),
                ("wb_skus", models.CharField(max_length=128)),
                ("wb_price", models.IntegerField()),
                ("wb_converted_price", models.IntegerField()),
                ("wb_currency_code", models.IntegerField()),
                ("wb_converted_currency_code", models.IntegerField()),
                ("wb_order_uid", models.CharField(max_length=128)),
                ("wb_delivery_type", models.CharField(max_length=128)),
                ("wb_nm_id", models.IntegerField()),
                ("wb_chrt_id", models.IntegerField()),
                ("wb_article", models.CharField(max_length=128)),
                ("wb_is_large_cargo", models.BooleanField()),
                ("partA", models.IntegerField(blank=True, null=True)),
                ("partB", models.IntegerField(blank=True, null=True)),
                ("barcode", models.TextField(blank=True, null=True)),
                ("svg_file", models.TextField(blank=True, null=True)),
                (
                    "business_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.wbbusinessaccountmodel",
                    ),
                ),
            ],
            options={
                "db_table": "wb_orders",
            },
        ),
        migrations.CreateModel(
            name="WbWarehouseModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=128)),
            ],
            options={
                "db_table": "wb_warehouses",
            },
        ),
        migrations.CreateModel(
            name="WbSupplyModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("wb_id", models.CharField(max_length=128, unique=True)),
                ("wb_name", models.CharField(max_length=128)),
                ("wb_done", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("svg_file", models.TextField(blank=True, null=True)),
                (
                    "wb_orders",
                    models.ManyToManyField(
                        blank=True, related_name="wb_supply", to="app.wbordermodel"
                    ),
                ),
            ],
            options={
                "db_table": "wb_supplies",
            },
        ),
        migrations.CreateModel(
            name="WbOrderProductModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nm_id", models.IntegerField()),
                ("name", models.TextField(blank=True, null=True)),
                ("quantity", models.IntegerField()),
                ("barcode", models.TextField(blank=True, null=True)),
                ("photo", models.TextField(blank=True, null=True)),
                ("packaging_class", models.TextField(blank=True, null=True)),
                ("code", models.TextField(blank=True, null=True)),
                ("storage_location", models.TextField(blank=True, null=True)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.wbordermodel",
                    ),
                ),
            ],
            options={
                "db_table": "wb_order_products",
            },
        ),
        migrations.AddField(
            model_name="wbordermodel",
            name="supply",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.wbsupplymodel",
            ),
        ),
        migrations.AddField(
            model_name="wbordermodel",
            name="warehouse",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="app.wbwarehousemodel"
            ),
        ),
        migrations.CreateModel(
            name="WbAccountWarehouseModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("wb_id", models.PositiveIntegerField()),
                (
                    "business_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wb_account_warehouses",
                        to="app.wbbusinessaccountmodel",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wb_account_warehouses",
                        to="app.wbwarehousemodel",
                    ),
                ),
            ],
            options={
                "db_table": "wb_account_warehouses",
            },
        ),
        migrations.CreateModel(
            name="TaskModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_created=True, auto_now_add=True),
                ),
                ("amount", models.PositiveIntegerField(default=10)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("completed", models.BooleanField(default=False)),
                (
                    "business_account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.wbbusinessaccountmodel",
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.employeemodel",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.wbwarehousemodel",
                    ),
                ),
            ],
            options={
                "db_table": "tasks",
            },
        ),
        migrations.RunPython(create_employees),
        migrations.RunPython(create_accounts),
    ]
